import numpy as np
from sklearn import linear_model
from time import time
#import os
from sklearn.metrics import accuracy_score
from sklearn.metrics import mean_absolute_error

#os.chdir('/Users/ishitasharma/Desktop/ECS171-Project')

trainData = np.load('ecs171train.npy')

parsed_trainData = np.zeros([50000, 771])


for i in range(50000):
    temp1 = trainData[i + 1].decode('utf-8')
    temp1 = temp1.replace("NA", "0")
    parsed_trainData[i] = [float(s1) for s1 in temp1.split(',')]


X = np.array(parsed_trainData[0:50000, 1:770])
y = np.array(parsed_trainData[0:50000, 770])
a=[2,8,9,11,12,14,15,16,17,18,19,24,25,26,27,29,36,37,38,40,41,42,43,44,46,47,48,50,51,52,53,54,56,57,58,60,61,62,63,64,66,67,68,69,72,73,74,77,78,79,80,81,86,87,88,89,90,91,96,97,98,99,100,101,106,107,108,109,110,111,116,117,118,119,120,121,126,127,128,129,130,131,136,137,138,139,140,141,146,147,148,149,150,155,156,157,158,159,160,165,166,167,168,169,170,175,176,177,178,179,180,185,186,187,188,189,190,195,196,197,198,199,200,205,206,207,208,209,210,215,216,217,218,219,220,225,226,227,228,229,230,235,236,237,238,239,240,245,246,247,248,249,250,255,256,257,258,259,260,265,266,267,268,269,270,275,276,277,278,279,280,285,286,287,288,289,294,295,296,297,302,303,304,305,310,311,312,313,318,319,320,321,326,327,328,329,330,331,336,337,338,339,340,341,342,345,346,347,348,349,350,353,354,355,356,357,358,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,380,381,382,383,384,385,389,390,391,392,393,394,395,396,399,401,402,403,404,406,407,408,409,410,411,412,413,418,419,420,421,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,455,457,459,462,463,465,466,468,471,472,474,476,477,478,482,484,486,487,488,492,494,496,497,498,502,504,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,526,528,529,531,532,533,538,539,541,542,543,548,549,551,552,553,558,559,561,562,563,568,570,571,572,577,579,580,581,582,583,584,585,586,587,588,589,591,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,618,619,620,621,622,624,625,626,627,628,629,630,631,632,633,635,636,637,638,639,640,641,642,643,644,645,650,651,652,653,654,655,656,659,660,661,662,663,666,670,671,672,673,674,675,676,677,678,679,680,681,682,686,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,717,723,724,725,727,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,755,756,757,758,759,761,762,763,764,765]
X=X[:,a]	
train_X = X[0:37501]
train_y = y[0:37501]
indicepo = train_y>0
indicene = train_y==0

train_y[indicepo]=1
train_y[indicene]=-1
test_X = X[37501:50000]
test_y = y[37501:50000]
indicepo = test_y>0
indicene = test_y==0
test_y[indicepo]=1
test_y[indicene]=-1

classifier = linear_model.LogisticRegression(tol=0.00003, max_iter=2000, solver='saga')
t0 = time()
classifier.fit(train_X, train_y)
print ("training time:", round(time() - t0, 3), "s")
t1 = time()
prediction = classifier.predict(test_X)

print ("testing time:", round(time() - t1, 3), "s")
np.savetxt("prediction.csv", prediction, delimiter=" ")
np.savetxt("test_y.csv", test_y, delimiter=" ")
print ("accuracy", accuracy_score(test_y, prediction))
print ("MAE", mean_absolute_error(test_y, prediction))

